//
// Description: 在本章中，若无特别声明，均假定是按关键字递增排序，
//              且以顺序表作为表的存储结构，为简单起见，假设关键
//              字类型为整型。
// Created by hanqing zhu on 2018/12/3.
//

#ifndef CHAPTER10_MAIN_H
#define CHAPTER10_MAIN_H

/*------------------------------------------------------
 *
 * 最大记录数
 * 
 * author： hanqing zhu 2018/12/3 16:19
 * -----------------------------------------------------*/
#define MaxSize 100


/*------------------------------------------------------
 *
 * 定义关键字类型为整型
 * 
 * author： hanqing zhu 2018/12/3 15:44
 * -----------------------------------------------------*/
typedef int KeyType;

/*------------------------------------------------------
 *
 * 其他数据项类型
 *
 * author： hanqing zhu 2018/12/3 15:45
 * -----------------------------------------------------*/
typedef struct {
    char d[MaxSize];
}InfoType;


/*------------------------------------------------------
 *
 * 排序的记录类型定义
 *
 * author： hanqing zhu 2018/12/3 15:46
 * -----------------------------------------------------*/
typedef struct rec{
    //关键字项
    KeyType key;
    //其他数据项
    InfoType data;
    //链表中下一个结点位置
    struct rec *next;
}RecType;

/*------------------------------------------------------
 *
 * 初始化待排序数组
 *
 * author： hanqing zhu 2018/12/3 15:58
 * -----------------------------------------------------*/
void initSortRec(RecType *r,KeyType x[],int n);

/*------------------------------------------------------
 *
 * 输出记录数组
 *
 * author： hanqing zhu 2018/12/3 16:14
 * -----------------------------------------------------*/
void printSortRec(RecType r[],int n);

#define INF 32767

#endif //CHAPTER10_MAIN_H
