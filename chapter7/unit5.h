//
// Description: 二叉树的遍历
// Created by hanqing zhu on 2018/11/20.
//

#ifndef CHAPTER7_UNIT5_H
#define CHAPTER7_UNIT5_H


#include "btree.h"

/*------------------------------------------------------
 *
 * 先序遍历二叉树
 *
 * author： hanqing zhu 2018/11/20 9:40
 * -----------------------------------------------------*/
void preOrder(BTNode *b);

/*------------------------------------------------------
 *
 * 中序遍历二叉树
 *
 * author： hanqing zhu 2018/11/20 9:41
 * -----------------------------------------------------*/
void inOrder(BTNode *b);

/*------------------------------------------------------
 *
 * 后序遍历二叉树
 *
 * author： hanqing zhu 2018/11/20 9:42
 * -----------------------------------------------------*/
void postOrder(BTNode *b);

/*------------------------------------------------------
 *
 * 输出二叉树的所有叶子结点（递归）
 * 
 * author： hanqing zhu 2018/11/20 10:05
 * -----------------------------------------------------*/
void printLeafNode_exa7_8(BTNode *b);

/*------------------------------------------------------
 *
 * 求二叉树中结点值为x的结点的层数（假设二叉树结点值均不相同）
 * 
 * author： hanqing zhu 2018/11/20 10:20
 * -----------------------------------------------------*/
int level_exa7_9(BTNode *b,ElemType x,int level);

/*------------------------------------------------------
 *
 * 输出值为x的结点的所有祖先
 *
 * author： hanqing zhu 2018/11/20 20:48
 * -----------------------------------------------------*/
int ancestor_exa7_11(BTNode *b,ElemType x,BTNode * ancestors[],int count);
int ancestor_exa7_11_book(BTNode *b,ElemType x);

/*------------------------------------------------------
 *
 * 先序遍历非递归算法
 *
 * author： hanqing zhu 2018/11/21 9:25
 * -----------------------------------------------------*/
void preOrder_nonRecursion(BTNode *b);

/*------------------------------------------------------
 *
 * 中序遍历非递归算法
 * 
 * author： hanqing zhu 2018/11/21 9:28
 * -----------------------------------------------------*/
void inOrder_nonRecursion(BTNode *b);
void inOrder_nonRecursion_book(BTNode *b);

/*------------------------------------------------------
 *
 * 后序遍历非递归算法
 *
 * author： hanqing zhu 2018/11/21 9:28
 * -----------------------------------------------------*/
void postOrder_nonRecursion(BTNode *b);

/*------------------------------------------------------
 *
 * 输出从根结点到每个叶子结点的路径之逆
 *
 * author： hanqing zhu 2018/11/21 16:45
 * -----------------------------------------------------*/
void allPath_exa7_12(BTNode *b);

/*------------------------------------------------------
 *
 * 层次遍历算法
 * 
 * author： hanqing zhu 2018/11/21 17:11
 * -----------------------------------------------------*/
void levelOrder(BTNode *b);

/*------------------------------------------------------
 *
 * 层次遍历输出所有叶子节点的祖先结点
 * 
 * author： hanqing zhu 2018/11/21 17:22
 * -----------------------------------------------------*/
void allPath_exa7_12_level(BTNode *b);


#endif //CHAPTER7_UNIT5_H
