//
// Description: 哈希表查找：用开放地址法中的线性探查法解决冲突时实现的哈希表运算
// Created by hanqing zhu on 2018/12/3.
//

#ifndef CHAPTER9_UNIT4_H
#define CHAPTER9_UNIT4_H

/*------------------------------------------------------
 *
 * 定义最大哈希表长度
 *
 * author： hanqing zhu 2018/12/3 10:14
 * -----------------------------------------------------*/
#define MaxSize 100

/*------------------------------------------------------
 *
 * 定义空关键字值
 *
 * author： hanqing zhu 2018/12/3 10:14
 * -----------------------------------------------------*/
#define NULLKEY -1

/*------------------------------------------------------
 *
 * 定义被删关键字值
 * 
 * author： hanqing zhu 2018/12/3 10:15
 * -----------------------------------------------------*/
#define DELKEY -2

/*------------------------------------------------------
 *
 * 关键字类型
 *
 * author： hanqing zhu 2018/12/3 10:16
 * -----------------------------------------------------*/
typedef int KeyType;

/*------------------------------------------------------
 *
 * 其它数据类型
 *
 * author： hanqing zhu 2018/12/3 10:16
 * -----------------------------------------------------*/
typedef char * InfoType;

/*------------------------------------------------------
 *
 * 哈希表类型
 * 
 * author： hanqing zhu 2018/12/3 10:16
 * -----------------------------------------------------*/
typedef struct {
    //关键字域
    KeyType key;
    //其它数据域
    InfoType data;
    //探查次数域
    int count;
}HashTable[MaxSize];

/*------------------------------------------------------
 *
 * 在哈希表中查找关键字k
 *
 * author： hanqing zhu 2018/12/3 10:20
 * -----------------------------------------------------*/
int searchHT(HashTable ha,int p,KeyType k);

/*------------------------------------------------------
 *
 * 删除哈希表中的关键字k
 *
 * author： hanqing zhu 2018/12/3 10:29
 * -----------------------------------------------------*/
int deleteHT(HashTable ha,int p,int k,int *n);

/*------------------------------------------------------
 *
 * 将k插入到哈希表中
 * 
 * author： hanqing zhu 2018/12/3 10:39
 * -----------------------------------------------------*/
void insertHT(HashTable ha,int p,int k,int *n);

/*------------------------------------------------------
 *
 * 创建哈希表
 *
 * author： hanqing zhu 2018/12/3 10:44
 * -----------------------------------------------------*/
void createHT(HashTable ha,KeyType x[],int n,int m,int p);


#endif //CHAPTER9_UNIT4_H
